//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinForm_C2CStore.AuctionService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bid", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    [System.SerializableAttribute()]
    public partial class Bid : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.User UserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int UserIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.User User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId {
            get {
                return this.UserIdField;
            }
            set {
                if ((this.UserIdField.Equals(value) != true)) {
                    this.UserIdField = value;
                    this.RaisePropertyChanged("UserId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auction", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    [System.SerializableAttribute()]
    public partial class Auction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.AuctionComment[] AuctionCommentsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.AuctionStatus AutionStatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BestBidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.Bid[] BidsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.Category CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CategoryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime EndTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsApprovalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.User OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhotoUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.AuctionComment[] AuctionComments {
            get {
                return this.AuctionCommentsField;
            }
            set {
                if ((object.ReferenceEquals(this.AuctionCommentsField, value) != true)) {
                    this.AuctionCommentsField = value;
                    this.RaisePropertyChanged("AuctionComments");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.AuctionStatus AutionStatus {
            get {
                return this.AutionStatusField;
            }
            set {
                if ((this.AutionStatusField.Equals(value) != true)) {
                    this.AutionStatusField = value;
                    this.RaisePropertyChanged("AutionStatus");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BestBid {
            get {
                return this.BestBidField;
            }
            set {
                if ((this.BestBidField.Equals(value) != true)) {
                    this.BestBidField = value;
                    this.RaisePropertyChanged("BestBid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.Bid[] Bids {
            get {
                return this.BidsField;
            }
            set {
                if ((object.ReferenceEquals(this.BidsField, value) != true)) {
                    this.BidsField = value;
                    this.RaisePropertyChanged("Bids");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.Category Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId {
            get {
                return this.CategoryIdField;
            }
            set {
                if ((this.CategoryIdField.Equals(value) != true)) {
                    this.CategoryIdField = value;
                    this.RaisePropertyChanged("CategoryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime {
            get {
                return this.EndTimeField;
            }
            set {
                if ((this.EndTimeField.Equals(value) != true)) {
                    this.EndTimeField = value;
                    this.RaisePropertyChanged("EndTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproval {
            get {
                return this.IsApprovalField;
            }
            set {
                if ((this.IsApprovalField.Equals(value) != true)) {
                    this.IsApprovalField = value;
                    this.RaisePropertyChanged("IsApproval");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.User Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoUrl {
            get {
                return this.PhotoUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.PhotoUrlField, value) != true)) {
                    this.PhotoUrlField = value;
                    this.RaisePropertyChanged("PhotoUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    [System.SerializableAttribute()]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuctionComment", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    [System.SerializableAttribute()]
    public partial class AuctionComment : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WinForm_C2CStore.AuctionService.User CommentUserField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WinForm_C2CStore.AuctionService.User CommentUser {
            get {
                return this.CommentUserField;
            }
            set {
                if ((object.ReferenceEquals(this.CommentUserField, value) != true)) {
                    this.CommentUserField = value;
                    this.RaisePropertyChanged("CommentUser");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuctionStatus", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public enum AuctionStatus : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Opened = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 4,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuctionService.IAuctionService")]
    public interface IAuctionService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetServiceInfo", ReplyAction="http://tempuri.org/IAuctionService/GetServiceInfoResponse")]
        string GetServiceInfo();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetServiceInfo", ReplyAction="http://tempuri.org/IAuctionService/GetServiceInfoResponse")]
        System.Threading.Tasks.Task<string> GetServiceInfoAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsByAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsByAuctionResponse")]
        WinForm_C2CStore.AuctionService.Bid[] GetBidsByAuction(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsByAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsByAuctionResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetBidsByAuctionAsync(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddNewAuction", ReplyAction="http://tempuri.org/IAuctionService/AddNewAuctionResponse")]
        void AddNewAuction(string userEmail, WinForm_C2CStore.AuctionService.Auction item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddNewAuction", ReplyAction="http://tempuri.org/IAuctionService/AddNewAuctionResponse")]
        System.Threading.Tasks.Task AddNewAuctionAsync(string userEmail, WinForm_C2CStore.AuctionService.Auction item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StartAuction", ReplyAction="http://tempuri.org/IAuctionService/StartAuctionResponse")]
        void StartAuction(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StartAuction", ReplyAction="http://tempuri.org/IAuctionService/StartAuctionResponse")]
        System.Threading.Tasks.Task StartAuctionAsync(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StopAuction", ReplyAction="http://tempuri.org/IAuctionService/StopAuctionResponse")]
        void StopAuction(string userEmail, int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StopAuction", ReplyAction="http://tempuri.org/IAuctionService/StopAuctionResponse")]
        System.Threading.Tasks.Task StopAuctionAsync(string userEmail, int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/CancelAuction", ReplyAction="http://tempuri.org/IAuctionService/CancelAuctionResponse")]
        void CancelAuction(string userEmail, int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/CancelAuction", ReplyAction="http://tempuri.org/IAuctionService/CancelAuctionResponse")]
        System.Threading.Tasks.Task CancelAuctionAsync(string userEmail, int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetWinner", ReplyAction="http://tempuri.org/IAuctionService/GetWinnerResponse")]
        WinForm_C2CStore.AuctionService.User GetWinner(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetWinner", ReplyAction="http://tempuri.org/IAuctionService/GetWinnerResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.User> GetWinnerAsync(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetMyAuctions(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetMyAuctionsAsync(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsOfAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsOfAuctionResponse")]
        WinForm_C2CStore.AuctionService.Bid[] GetBidsOfAuction(string userEmail, int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsOfAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsOfAuctionResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetBidsOfAuctionAsync(string userEmail, int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatus", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatusResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetMyAuctionsWithStatus(string userEmail, WinForm_C2CStore.AuctionService.AuctionStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatus", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatusResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetMyAuctionsWithStatusAsync(string userEmail, WinForm_C2CStore.AuctionService.AuctionStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToWinner", ReplyAction="http://tempuri.org/IAuctionService/ContactToWinnerResponse")]
        void ContactToWinner(string userEmail, int auctionId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToWinner", ReplyAction="http://tempuri.org/IAuctionService/ContactToWinnerResponse")]
        System.Threading.Tasks.Task ContactToWinnerAsync(string userEmail, int auctionId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToOwner", ReplyAction="http://tempuri.org/IAuctionService/ContactToOwnerResponse")]
        void ContactToOwner(string userEmail, int auctionId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToOwner", ReplyAction="http://tempuri.org/IAuctionService/ContactToOwnerResponse")]
        System.Threading.Tasks.Task ContactToOwnerAsync(string userEmail, int auctionId, string message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllAutions", ReplyAction="http://tempuri.org/IAuctionService/GetAllAutionsResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetAllAutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllAutions", ReplyAction="http://tempuri.org/IAuctionService/GetAllAutionsResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetAllAutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAutionsByStatus", ReplyAction="http://tempuri.org/IAuctionService/GetAutionsByStatusResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetAutionsByStatus(WinForm_C2CStore.AuctionService.AuctionStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAutionsByStatus", ReplyAction="http://tempuri.org/IAuctionService/GetAutionsByStatusResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetAutionsByStatusAsync(WinForm_C2CStore.AuctionService.AuctionStatus status);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Bid", ReplyAction="http://tempuri.org/IAuctionService/BidResponse")]
        bool Bid(string userEmail, int price, int autionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Bid", ReplyAction="http://tempuri.org/IAuctionService/BidResponse")]
        System.Threading.Tasks.Task<bool> BidAsync(string userEmail, int price, int autionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBestBid", ReplyAction="http://tempuri.org/IAuctionService/GetBestBidResponse")]
        int GetBestBid(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBestBid", ReplyAction="http://tempuri.org/IAuctionService/GetBestBidResponse")]
        System.Threading.Tasks.Task<int> GetBestBidAsync(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAuction", ReplyAction="http://tempuri.org/IAuctionService/GetAuctionResponse")]
        WinForm_C2CStore.AuctionService.Auction GetAuction(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAuction", ReplyAction="http://tempuri.org/IAuctionService/GetAuctionResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction> GetAuctionAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetOpenAuctions(int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetOpenAuctionsAsync(int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetTopPriceAuctions(int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopPriceAuctionsAsync(int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetTopBidAuctions(int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopBidAuctionsAsync(int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategoryResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetOpenAuctionsByCategory(string categoryName, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategoryResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetOpenAuctionsByCategoryAsync(string categoryName, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategoryResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetTopPriceAuctionsByCategory(string categoryName, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategoryResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopPriceAuctionsByCategoryAsync(string categoryName, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategoryResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetTopBidAuctionsByCategory(string categoryName, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategoryResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopBidAuctionsByCategoryAsync(string categoryName, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByUser", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByUserResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetOpenAuctionsByUser(string userEmail, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByUser", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByUserResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetOpenAuctionsByUserAsync(string userEmail, int idx, int size);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistoryResponse")]
        WinForm_C2CStore.AuctionService.Auction[] GetMyWonAuctionsHistory(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistoryResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetMyWonAuctionsHistoryAsync(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryResponse")]
        WinForm_C2CStore.AuctionService.Bid[] GetMyBidHistory(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetMyBidHistoryAsync(string userEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistoryByItem", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryByItemResponse")]
        WinForm_C2CStore.AuctionService.Bid[] GetMyBidHistoryByItem(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistoryByItem", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryByItemResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetMyBidHistoryByItemAsync(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllCategories", ReplyAction="http://tempuri.org/IAuctionService/GetAllCategoriesResponse")]
        WinForm_C2CStore.AuctionService.Category[] GetAllCategories();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllCategories", ReplyAction="http://tempuri.org/IAuctionService/GetAllCategoriesResponse")]
        System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Category[]> GetAllCategoriesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Comment", ReplyAction="http://tempuri.org/IAuctionService/CommentResponse")]
        void Comment(string userEmail, int autionId, string Content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Comment", ReplyAction="http://tempuri.org/IAuctionService/CommentResponse")]
        System.Threading.Tasks.Task CommentAsync(string userEmail, int autionId, string Content);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/UpdateAutions", ReplyAction="http://tempuri.org/IAuctionService/UpdateAutionsResponse")]
        void UpdateAutions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/UpdateAutions", ReplyAction="http://tempuri.org/IAuctionService/UpdateAutionsResponse")]
        System.Threading.Tasks.Task UpdateAutionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddServiceUser", ReplyAction="http://tempuri.org/IAuctionService/AddServiceUserResponse")]
        void AddServiceUser(WinForm_C2CStore.AuctionService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddServiceUser", ReplyAction="http://tempuri.org/IAuctionService/AddServiceUserResponse")]
        System.Threading.Tasks.Task AddServiceUserAsync(WinForm_C2CStore.AuctionService.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ActiveAuctions", ReplyAction="http://tempuri.org/IAuctionService/ActiveAuctionsResponse")]
        bool ActiveAuctions(int auctionId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ActiveAuctions", ReplyAction="http://tempuri.org/IAuctionService/ActiveAuctionsResponse")]
        System.Threading.Tasks.Task<bool> ActiveAuctionsAsync(int auctionId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuctionServiceChannel : WinForm_C2CStore.AuctionService.IAuctionService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuctionServiceClient : System.ServiceModel.ClientBase<WinForm_C2CStore.AuctionService.IAuctionService>, WinForm_C2CStore.AuctionService.IAuctionService {
        
        public AuctionServiceClient() {
        }
        
        public AuctionServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuctionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetServiceInfo() {
            return base.Channel.GetServiceInfo();
        }
        
        public System.Threading.Tasks.Task<string> GetServiceInfoAsync() {
            return base.Channel.GetServiceInfoAsync();
        }
        
        public WinForm_C2CStore.AuctionService.Bid[] GetBidsByAuction(int auctionId) {
            return base.Channel.GetBidsByAuction(auctionId);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetBidsByAuctionAsync(int auctionId) {
            return base.Channel.GetBidsByAuctionAsync(auctionId);
        }
        
        public void AddNewAuction(string userEmail, WinForm_C2CStore.AuctionService.Auction item) {
            base.Channel.AddNewAuction(userEmail, item);
        }
        
        public System.Threading.Tasks.Task AddNewAuctionAsync(string userEmail, WinForm_C2CStore.AuctionService.Auction item) {
            return base.Channel.AddNewAuctionAsync(userEmail, item);
        }
        
        public void StartAuction(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime) {
            base.Channel.StartAuction(userEmail, auctionId, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task StartAuctionAsync(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.StartAuctionAsync(userEmail, auctionId, startTime, endTime);
        }
        
        public void StopAuction(string userEmail, int auctionId) {
            base.Channel.StopAuction(userEmail, auctionId);
        }
        
        public System.Threading.Tasks.Task StopAuctionAsync(string userEmail, int auctionId) {
            return base.Channel.StopAuctionAsync(userEmail, auctionId);
        }
        
        public void CancelAuction(string userEmail, int auctionId) {
            base.Channel.CancelAuction(userEmail, auctionId);
        }
        
        public System.Threading.Tasks.Task CancelAuctionAsync(string userEmail, int auctionId) {
            return base.Channel.CancelAuctionAsync(userEmail, auctionId);
        }
        
        public WinForm_C2CStore.AuctionService.User GetWinner(int auctionId) {
            return base.Channel.GetWinner(auctionId);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.User> GetWinnerAsync(int auctionId) {
            return base.Channel.GetWinnerAsync(auctionId);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetMyAuctions(string userEmail) {
            return base.Channel.GetMyAuctions(userEmail);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetMyAuctionsAsync(string userEmail) {
            return base.Channel.GetMyAuctionsAsync(userEmail);
        }
        
        public WinForm_C2CStore.AuctionService.Bid[] GetBidsOfAuction(string userEmail, int auctionId) {
            return base.Channel.GetBidsOfAuction(userEmail, auctionId);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetBidsOfAuctionAsync(string userEmail, int auctionId) {
            return base.Channel.GetBidsOfAuctionAsync(userEmail, auctionId);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetMyAuctionsWithStatus(string userEmail, WinForm_C2CStore.AuctionService.AuctionStatus status) {
            return base.Channel.GetMyAuctionsWithStatus(userEmail, status);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetMyAuctionsWithStatusAsync(string userEmail, WinForm_C2CStore.AuctionService.AuctionStatus status) {
            return base.Channel.GetMyAuctionsWithStatusAsync(userEmail, status);
        }
        
        public void ContactToWinner(string userEmail, int auctionId, string message) {
            base.Channel.ContactToWinner(userEmail, auctionId, message);
        }
        
        public System.Threading.Tasks.Task ContactToWinnerAsync(string userEmail, int auctionId, string message) {
            return base.Channel.ContactToWinnerAsync(userEmail, auctionId, message);
        }
        
        public void ContactToOwner(string userEmail, int auctionId, string message) {
            base.Channel.ContactToOwner(userEmail, auctionId, message);
        }
        
        public System.Threading.Tasks.Task ContactToOwnerAsync(string userEmail, int auctionId, string message) {
            return base.Channel.ContactToOwnerAsync(userEmail, auctionId, message);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetAllAutions() {
            return base.Channel.GetAllAutions();
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetAllAutionsAsync() {
            return base.Channel.GetAllAutionsAsync();
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetAutionsByStatus(WinForm_C2CStore.AuctionService.AuctionStatus status) {
            return base.Channel.GetAutionsByStatus(status);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetAutionsByStatusAsync(WinForm_C2CStore.AuctionService.AuctionStatus status) {
            return base.Channel.GetAutionsByStatusAsync(status);
        }
        
        public bool Bid(string userEmail, int price, int autionId) {
            return base.Channel.Bid(userEmail, price, autionId);
        }
        
        public System.Threading.Tasks.Task<bool> BidAsync(string userEmail, int price, int autionId) {
            return base.Channel.BidAsync(userEmail, price, autionId);
        }
        
        public int GetBestBid(int auctionId) {
            return base.Channel.GetBestBid(auctionId);
        }
        
        public System.Threading.Tasks.Task<int> GetBestBidAsync(int auctionId) {
            return base.Channel.GetBestBidAsync(auctionId);
        }
        
        public WinForm_C2CStore.AuctionService.Auction GetAuction(int Id) {
            return base.Channel.GetAuction(Id);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction> GetAuctionAsync(int Id) {
            return base.Channel.GetAuctionAsync(Id);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetOpenAuctions(int idx, int size) {
            return base.Channel.GetOpenAuctions(idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetOpenAuctionsAsync(int idx, int size) {
            return base.Channel.GetOpenAuctionsAsync(idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetTopPriceAuctions(int idx, int size) {
            return base.Channel.GetTopPriceAuctions(idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopPriceAuctionsAsync(int idx, int size) {
            return base.Channel.GetTopPriceAuctionsAsync(idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetTopBidAuctions(int idx, int size) {
            return base.Channel.GetTopBidAuctions(idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopBidAuctionsAsync(int idx, int size) {
            return base.Channel.GetTopBidAuctionsAsync(idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetOpenAuctionsByCategory(string categoryName, int idx, int size) {
            return base.Channel.GetOpenAuctionsByCategory(categoryName, idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetOpenAuctionsByCategoryAsync(string categoryName, int idx, int size) {
            return base.Channel.GetOpenAuctionsByCategoryAsync(categoryName, idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetTopPriceAuctionsByCategory(string categoryName, int idx, int size) {
            return base.Channel.GetTopPriceAuctionsByCategory(categoryName, idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopPriceAuctionsByCategoryAsync(string categoryName, int idx, int size) {
            return base.Channel.GetTopPriceAuctionsByCategoryAsync(categoryName, idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetTopBidAuctionsByCategory(string categoryName, int idx, int size) {
            return base.Channel.GetTopBidAuctionsByCategory(categoryName, idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetTopBidAuctionsByCategoryAsync(string categoryName, int idx, int size) {
            return base.Channel.GetTopBidAuctionsByCategoryAsync(categoryName, idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetOpenAuctionsByUser(string userEmail, int idx, int size) {
            return base.Channel.GetOpenAuctionsByUser(userEmail, idx, size);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetOpenAuctionsByUserAsync(string userEmail, int idx, int size) {
            return base.Channel.GetOpenAuctionsByUserAsync(userEmail, idx, size);
        }
        
        public WinForm_C2CStore.AuctionService.Auction[] GetMyWonAuctionsHistory(string userEmail) {
            return base.Channel.GetMyWonAuctionsHistory(userEmail);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Auction[]> GetMyWonAuctionsHistoryAsync(string userEmail) {
            return base.Channel.GetMyWonAuctionsHistoryAsync(userEmail);
        }
        
        public WinForm_C2CStore.AuctionService.Bid[] GetMyBidHistory(string userEmail) {
            return base.Channel.GetMyBidHistory(userEmail);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetMyBidHistoryAsync(string userEmail) {
            return base.Channel.GetMyBidHistoryAsync(userEmail);
        }
        
        public WinForm_C2CStore.AuctionService.Bid[] GetMyBidHistoryByItem(int auctionId) {
            return base.Channel.GetMyBidHistoryByItem(auctionId);
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Bid[]> GetMyBidHistoryByItemAsync(int auctionId) {
            return base.Channel.GetMyBidHistoryByItemAsync(auctionId);
        }
        
        public WinForm_C2CStore.AuctionService.Category[] GetAllCategories() {
            return base.Channel.GetAllCategories();
        }
        
        public System.Threading.Tasks.Task<WinForm_C2CStore.AuctionService.Category[]> GetAllCategoriesAsync() {
            return base.Channel.GetAllCategoriesAsync();
        }
        
        public void Comment(string userEmail, int autionId, string Content) {
            base.Channel.Comment(userEmail, autionId, Content);
        }
        
        public System.Threading.Tasks.Task CommentAsync(string userEmail, int autionId, string Content) {
            return base.Channel.CommentAsync(userEmail, autionId, Content);
        }
        
        public void UpdateAutions() {
            base.Channel.UpdateAutions();
        }
        
        public System.Threading.Tasks.Task UpdateAutionsAsync() {
            return base.Channel.UpdateAutionsAsync();
        }
        
        public void AddServiceUser(WinForm_C2CStore.AuctionService.User user) {
            base.Channel.AddServiceUser(user);
        }
        
        public System.Threading.Tasks.Task AddServiceUserAsync(WinForm_C2CStore.AuctionService.User user) {
            return base.Channel.AddServiceUserAsync(user);
        }
        
        public bool ActiveAuctions(int auctionId) {
            return base.Channel.ActiveAuctions(auctionId);
        }
        
        public System.Threading.Tasks.Task<bool> ActiveAuctionsAsync(int auctionId) {
            return base.Channel.ActiveAuctionsAsync(auctionId);
        }
    }
}
