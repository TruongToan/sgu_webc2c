//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SGU_C2CStore.Services.Models
{
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Bid", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public partial class Bid : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private int IdField;
        
        private int PriceField;
        
        private System.DateTime TimeField;
        
        private SGU_C2CStore.Services.Models.User UserField;
        
        private int UserIdField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time
        {
            get
            {
                return this.TimeField;
            }
            set
            {
                this.TimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.User User
        {
            get
            {
                return this.UserField;
            }
            set
            {
                this.UserField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int UserId
        {
            get
            {
                return this.UserIdField;
            }
            set
            {
                this.UserIdField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string AddressField;
        
        private string EmailField;
        
        private int IdField;
        
        private string PhoneNumberField;
        
        private string UserNameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address
        {
            get
            {
                return this.AddressField;
            }
            set
            {
                this.AddressField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email
        {
            get
            {
                return this.EmailField;
            }
            set
            {
                this.EmailField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber
        {
            get
            {
                return this.PhoneNumberField;
            }
            set
            {
                this.PhoneNumberField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName
        {
            get
            {
                return this.UserNameField;
            }
            set
            {
                this.UserNameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Auction", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public partial class Auction : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private SGU_C2CStore.Services.Models.AuctionComment[] AuctionCommentsField;
        
        private SGU_C2CStore.Services.Models.AuctionStatus AutionStatusField;
        
        private int BestBidField;
        
        private SGU_C2CStore.Services.Models.Bid[] BidsField;
        
        private SGU_C2CStore.Services.Models.Category CategoryField;
        
        private int CategoryIdField;
        
        private string DescriptionField;
        
        private System.DateTime EndTimeField;
        
        private int IdField;
        
        private bool IsApprovalField;
        
        private string NameField;
        
        private SGU_C2CStore.Services.Models.User OwnerField;
        
        private string PhotoUrlField;
        
        private int PriceField;
        
        private System.DateTime StartTimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.AuctionComment[] AuctionComments
        {
            get
            {
                return this.AuctionCommentsField;
            }
            set
            {
                this.AuctionCommentsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.AuctionStatus AutionStatus
        {
            get
            {
                return this.AutionStatusField;
            }
            set
            {
                this.AutionStatusField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BestBid
        {
            get
            {
                return this.BestBidField;
            }
            set
            {
                this.BestBidField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.Bid[] Bids
        {
            get
            {
                return this.BidsField;
            }
            set
            {
                this.BidsField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.Category Category
        {
            get
            {
                return this.CategoryField;
            }
            set
            {
                this.CategoryField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CategoryId
        {
            get
            {
                return this.CategoryIdField;
            }
            set
            {
                this.CategoryIdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime EndTime
        {
            get
            {
                return this.EndTimeField;
            }
            set
            {
                this.EndTimeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsApproval
        {
            get
            {
                return this.IsApprovalField;
            }
            set
            {
                this.IsApprovalField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.User Owner
        {
            get
            {
                return this.OwnerField;
            }
            set
            {
                this.OwnerField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhotoUrl
        {
            get
            {
                return this.PhotoUrlField;
            }
            set
            {
                this.PhotoUrlField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Price
        {
            get
            {
                return this.PriceField;
            }
            set
            {
                this.PriceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime
        {
            get
            {
                return this.StartTimeField;
            }
            set
            {
                this.StartTimeField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Category", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public partial class Category : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string DescriptionField;
        
        private int IdField;
        
        private string NameField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description
        {
            get
            {
                return this.DescriptionField;
            }
            set
            {
                this.DescriptionField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name
        {
            get
            {
                return this.NameField;
            }
            set
            {
                this.NameField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuctionComment", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public partial class AuctionComment : object, System.Runtime.Serialization.IExtensibleDataObject
    {
        
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private SGU_C2CStore.Services.Models.User CommentUserField;
        
        private string ContentField;
        
        private int IdField;
        
        private System.DateTime TimeField;
        
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData
        {
            get
            {
                return this.extensionDataField;
            }
            set
            {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public SGU_C2CStore.Services.Models.User CommentUser
        {
            get
            {
                return this.CommentUserField;
            }
            set
            {
                this.CommentUserField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content
        {
            get
            {
                return this.ContentField;
            }
            set
            {
                this.ContentField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id
        {
            get
            {
                return this.IdField;
            }
            set
            {
                this.IdField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time
        {
            get
            {
                return this.TimeField;
            }
            set
            {
                this.TimeField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuctionStatus", Namespace="http://schemas.datacontract.org/2004/07/SGU_C2CStore.Services.Models")]
    public enum AuctionStatus : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        New = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Pending = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Opened = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Closed = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cancelled = 4,
    }
}


[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(ConfigurationName="IAuctionService")]
public interface IAuctionService
{
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetServiceInfo", ReplyAction="http://tempuri.org/IAuctionService/GetServiceInfoResponse")]
    string GetServiceInfo();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetServiceInfo", ReplyAction="http://tempuri.org/IAuctionService/GetServiceInfoResponse")]
    System.Threading.Tasks.Task<string> GetServiceInfoAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsByAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsByAuctionResponse")]
    SGU_C2CStore.Services.Models.Bid[] GetBidsByAuction(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsByAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsByAuctionResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetBidsByAuctionAsync(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddNewAuction", ReplyAction="http://tempuri.org/IAuctionService/AddNewAuctionResponse")]
    void AddNewAuction(string userEmail, SGU_C2CStore.Services.Models.Auction item);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddNewAuction", ReplyAction="http://tempuri.org/IAuctionService/AddNewAuctionResponse")]
    System.Threading.Tasks.Task AddNewAuctionAsync(string userEmail, SGU_C2CStore.Services.Models.Auction item);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StartAuction", ReplyAction="http://tempuri.org/IAuctionService/StartAuctionResponse")]
    void StartAuction(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StartAuction", ReplyAction="http://tempuri.org/IAuctionService/StartAuctionResponse")]
    System.Threading.Tasks.Task StartAuctionAsync(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StopAuction", ReplyAction="http://tempuri.org/IAuctionService/StopAuctionResponse")]
    void StopAuction(string userEmail, int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/StopAuction", ReplyAction="http://tempuri.org/IAuctionService/StopAuctionResponse")]
    System.Threading.Tasks.Task StopAuctionAsync(string userEmail, int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/CancelAuction", ReplyAction="http://tempuri.org/IAuctionService/CancelAuctionResponse")]
    void CancelAuction(string userEmail, int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/CancelAuction", ReplyAction="http://tempuri.org/IAuctionService/CancelAuctionResponse")]
    System.Threading.Tasks.Task CancelAuctionAsync(string userEmail, int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetWinner", ReplyAction="http://tempuri.org/IAuctionService/GetWinnerResponse")]
    SGU_C2CStore.Services.Models.User GetWinner(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetWinner", ReplyAction="http://tempuri.org/IAuctionService/GetWinnerResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.User> GetWinnerAsync(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetMyAuctions(string userEmail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetMyAuctionsAsync(string userEmail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsOfAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsOfAuctionResponse")]
    SGU_C2CStore.Services.Models.Bid[] GetBidsOfAuction(string userEmail, int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBidsOfAuction", ReplyAction="http://tempuri.org/IAuctionService/GetBidsOfAuctionResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetBidsOfAuctionAsync(string userEmail, int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatus", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatusResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetMyAuctionsWithStatus(string userEmail, SGU_C2CStore.Services.Models.AuctionStatus status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatus", ReplyAction="http://tempuri.org/IAuctionService/GetMyAuctionsWithStatusResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetMyAuctionsWithStatusAsync(string userEmail, SGU_C2CStore.Services.Models.AuctionStatus status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToWinner", ReplyAction="http://tempuri.org/IAuctionService/ContactToWinnerResponse")]
    void ContactToWinner(string userEmail, int auctionId, string message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToWinner", ReplyAction="http://tempuri.org/IAuctionService/ContactToWinnerResponse")]
    System.Threading.Tasks.Task ContactToWinnerAsync(string userEmail, int auctionId, string message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToOwner", ReplyAction="http://tempuri.org/IAuctionService/ContactToOwnerResponse")]
    void ContactToOwner(string userEmail, int auctionId, string message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/ContactToOwner", ReplyAction="http://tempuri.org/IAuctionService/ContactToOwnerResponse")]
    System.Threading.Tasks.Task ContactToOwnerAsync(string userEmail, int auctionId, string message);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllAutions", ReplyAction="http://tempuri.org/IAuctionService/GetAllAutionsResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetAllAutions();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllAutions", ReplyAction="http://tempuri.org/IAuctionService/GetAllAutionsResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetAllAutionsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAutionsByStatus", ReplyAction="http://tempuri.org/IAuctionService/GetAutionsByStatusResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetAutionsByStatus(SGU_C2CStore.Services.Models.AuctionStatus status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAutionsByStatus", ReplyAction="http://tempuri.org/IAuctionService/GetAutionsByStatusResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetAutionsByStatusAsync(SGU_C2CStore.Services.Models.AuctionStatus status);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Bid", ReplyAction="http://tempuri.org/IAuctionService/BidResponse")]
    bool Bid(string userEmail, int price, int autionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Bid", ReplyAction="http://tempuri.org/IAuctionService/BidResponse")]
    System.Threading.Tasks.Task<bool> BidAsync(string userEmail, int price, int autionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBestBid", ReplyAction="http://tempuri.org/IAuctionService/GetBestBidResponse")]
    int GetBestBid(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetBestBid", ReplyAction="http://tempuri.org/IAuctionService/GetBestBidResponse")]
    System.Threading.Tasks.Task<int> GetBestBidAsync(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAuction", ReplyAction="http://tempuri.org/IAuctionService/GetAuctionResponse")]
    SGU_C2CStore.Services.Models.Auction GetAuction(int Id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAuction", ReplyAction="http://tempuri.org/IAuctionService/GetAuctionResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction> GetAuctionAsync(int Id);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetOpenAuctions(int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetOpenAuctionsAsync(int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetTopPriceAuctions(int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopPriceAuctionsAsync(int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetTopBidAuctions(int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctions", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopBidAuctionsAsync(int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategoryResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetOpenAuctionsByCategory(string categoryName, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByCategoryResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetOpenAuctionsByCategoryAsync(string categoryName, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategoryResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetTopPriceAuctionsByCategory(string categoryName, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopPriceAuctionsByCategoryResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopPriceAuctionsByCategoryAsync(string categoryName, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategoryResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetTopBidAuctionsByCategory(string categoryName, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategory", ReplyAction="http://tempuri.org/IAuctionService/GetTopBidAuctionsByCategoryResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopBidAuctionsByCategoryAsync(string categoryName, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByUser", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByUserResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetOpenAuctionsByUser(string userEmail, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetOpenAuctionsByUser", ReplyAction="http://tempuri.org/IAuctionService/GetOpenAuctionsByUserResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetOpenAuctionsByUserAsync(string userEmail, int idx, int size);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistoryResponse")]
    SGU_C2CStore.Services.Models.Auction[] GetMyWonAuctionsHistory(string userEmail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyWonAuctionsHistoryResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetMyWonAuctionsHistoryAsync(string userEmail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryResponse")]
    SGU_C2CStore.Services.Models.Bid[] GetMyBidHistory(string userEmail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistory", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetMyBidHistoryAsync(string userEmail);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistoryByItem", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryByItemResponse")]
    SGU_C2CStore.Services.Models.Bid[] GetMyBidHistoryByItem(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetMyBidHistoryByItem", ReplyAction="http://tempuri.org/IAuctionService/GetMyBidHistoryByItemResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetMyBidHistoryByItemAsync(int auctionId);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllCategories", ReplyAction="http://tempuri.org/IAuctionService/GetAllCategoriesResponse")]
    SGU_C2CStore.Services.Models.Category[] GetAllCategories();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/GetAllCategories", ReplyAction="http://tempuri.org/IAuctionService/GetAllCategoriesResponse")]
    System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Category[]> GetAllCategoriesAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Comment", ReplyAction="http://tempuri.org/IAuctionService/CommentResponse")]
    void Comment(string userEmail, int autionId, string Content);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/Comment", ReplyAction="http://tempuri.org/IAuctionService/CommentResponse")]
    System.Threading.Tasks.Task CommentAsync(string userEmail, int autionId, string Content);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/UpdateAutions", ReplyAction="http://tempuri.org/IAuctionService/UpdateAutionsResponse")]
    void UpdateAutions();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/UpdateAutions", ReplyAction="http://tempuri.org/IAuctionService/UpdateAutionsResponse")]
    System.Threading.Tasks.Task UpdateAutionsAsync();
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddServiceUser", ReplyAction="http://tempuri.org/IAuctionService/AddServiceUserResponse")]
    void AddServiceUser(SGU_C2CStore.Services.Models.User user);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuctionService/AddServiceUser", ReplyAction="http://tempuri.org/IAuctionService/AddServiceUserResponse")]
    System.Threading.Tasks.Task AddServiceUserAsync(SGU_C2CStore.Services.Models.User user);
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public interface IAuctionServiceChannel : IAuctionService, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
public partial class AuctionServiceClient : System.ServiceModel.ClientBase<IAuctionService>, IAuctionService
{
    
    public AuctionServiceClient()
    {
    }
    
    public AuctionServiceClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public AuctionServiceClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AuctionServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public AuctionServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    public string GetServiceInfo()
    {
        return base.Channel.GetServiceInfo();
    }
    
    public System.Threading.Tasks.Task<string> GetServiceInfoAsync()
    {
        return base.Channel.GetServiceInfoAsync();
    }
    
    public SGU_C2CStore.Services.Models.Bid[] GetBidsByAuction(int auctionId)
    {
        return base.Channel.GetBidsByAuction(auctionId);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetBidsByAuctionAsync(int auctionId)
    {
        return base.Channel.GetBidsByAuctionAsync(auctionId);
    }
    
    public void AddNewAuction(string userEmail, SGU_C2CStore.Services.Models.Auction item)
    {
        base.Channel.AddNewAuction(userEmail, item);
    }
    
    public System.Threading.Tasks.Task AddNewAuctionAsync(string userEmail, SGU_C2CStore.Services.Models.Auction item)
    {
        return base.Channel.AddNewAuctionAsync(userEmail, item);
    }
    
    public void StartAuction(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime)
    {
        base.Channel.StartAuction(userEmail, auctionId, startTime, endTime);
    }
    
    public System.Threading.Tasks.Task StartAuctionAsync(string userEmail, int auctionId, System.DateTime startTime, System.DateTime endTime)
    {
        return base.Channel.StartAuctionAsync(userEmail, auctionId, startTime, endTime);
    }
    
    public void StopAuction(string userEmail, int auctionId)
    {
        base.Channel.StopAuction(userEmail, auctionId);
    }
    
    public System.Threading.Tasks.Task StopAuctionAsync(string userEmail, int auctionId)
    {
        return base.Channel.StopAuctionAsync(userEmail, auctionId);
    }
    
    public void CancelAuction(string userEmail, int auctionId)
    {
        base.Channel.CancelAuction(userEmail, auctionId);
    }
    
    public System.Threading.Tasks.Task CancelAuctionAsync(string userEmail, int auctionId)
    {
        return base.Channel.CancelAuctionAsync(userEmail, auctionId);
    }
    
    public SGU_C2CStore.Services.Models.User GetWinner(int auctionId)
    {
        return base.Channel.GetWinner(auctionId);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.User> GetWinnerAsync(int auctionId)
    {
        return base.Channel.GetWinnerAsync(auctionId);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetMyAuctions(string userEmail)
    {
        return base.Channel.GetMyAuctions(userEmail);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetMyAuctionsAsync(string userEmail)
    {
        return base.Channel.GetMyAuctionsAsync(userEmail);
    }
    
    public SGU_C2CStore.Services.Models.Bid[] GetBidsOfAuction(string userEmail, int auctionId)
    {
        return base.Channel.GetBidsOfAuction(userEmail, auctionId);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetBidsOfAuctionAsync(string userEmail, int auctionId)
    {
        return base.Channel.GetBidsOfAuctionAsync(userEmail, auctionId);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetMyAuctionsWithStatus(string userEmail, SGU_C2CStore.Services.Models.AuctionStatus status)
    {
        return base.Channel.GetMyAuctionsWithStatus(userEmail, status);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetMyAuctionsWithStatusAsync(string userEmail, SGU_C2CStore.Services.Models.AuctionStatus status)
    {
        return base.Channel.GetMyAuctionsWithStatusAsync(userEmail, status);
    }
    
    public void ContactToWinner(string userEmail, int auctionId, string message)
    {
        base.Channel.ContactToWinner(userEmail, auctionId, message);
    }
    
    public System.Threading.Tasks.Task ContactToWinnerAsync(string userEmail, int auctionId, string message)
    {
        return base.Channel.ContactToWinnerAsync(userEmail, auctionId, message);
    }
    
    public void ContactToOwner(string userEmail, int auctionId, string message)
    {
        base.Channel.ContactToOwner(userEmail, auctionId, message);
    }
    
    public System.Threading.Tasks.Task ContactToOwnerAsync(string userEmail, int auctionId, string message)
    {
        return base.Channel.ContactToOwnerAsync(userEmail, auctionId, message);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetAllAutions()
    {
        return base.Channel.GetAllAutions();
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetAllAutionsAsync()
    {
        return base.Channel.GetAllAutionsAsync();
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetAutionsByStatus(SGU_C2CStore.Services.Models.AuctionStatus status)
    {
        return base.Channel.GetAutionsByStatus(status);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetAutionsByStatusAsync(SGU_C2CStore.Services.Models.AuctionStatus status)
    {
        return base.Channel.GetAutionsByStatusAsync(status);
    }
    
    public bool Bid(string userEmail, int price, int autionId)
    {
        return base.Channel.Bid(userEmail, price, autionId);
    }
    
    public System.Threading.Tasks.Task<bool> BidAsync(string userEmail, int price, int autionId)
    {
        return base.Channel.BidAsync(userEmail, price, autionId);
    }
    
    public int GetBestBid(int auctionId)
    {
        return base.Channel.GetBestBid(auctionId);
    }
    
    public System.Threading.Tasks.Task<int> GetBestBidAsync(int auctionId)
    {
        return base.Channel.GetBestBidAsync(auctionId);
    }
    
    public SGU_C2CStore.Services.Models.Auction GetAuction(int Id)
    {
        return base.Channel.GetAuction(Id);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction> GetAuctionAsync(int Id)
    {
        return base.Channel.GetAuctionAsync(Id);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetOpenAuctions(int idx, int size)
    {
        return base.Channel.GetOpenAuctions(idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetOpenAuctionsAsync(int idx, int size)
    {
        return base.Channel.GetOpenAuctionsAsync(idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetTopPriceAuctions(int idx, int size)
    {
        return base.Channel.GetTopPriceAuctions(idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopPriceAuctionsAsync(int idx, int size)
    {
        return base.Channel.GetTopPriceAuctionsAsync(idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetTopBidAuctions(int idx, int size)
    {
        return base.Channel.GetTopBidAuctions(idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopBidAuctionsAsync(int idx, int size)
    {
        return base.Channel.GetTopBidAuctionsAsync(idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetOpenAuctionsByCategory(string categoryName, int idx, int size)
    {
        return base.Channel.GetOpenAuctionsByCategory(categoryName, idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetOpenAuctionsByCategoryAsync(string categoryName, int idx, int size)
    {
        return base.Channel.GetOpenAuctionsByCategoryAsync(categoryName, idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetTopPriceAuctionsByCategory(string categoryName, int idx, int size)
    {
        return base.Channel.GetTopPriceAuctionsByCategory(categoryName, idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopPriceAuctionsByCategoryAsync(string categoryName, int idx, int size)
    {
        return base.Channel.GetTopPriceAuctionsByCategoryAsync(categoryName, idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetTopBidAuctionsByCategory(string categoryName, int idx, int size)
    {
        return base.Channel.GetTopBidAuctionsByCategory(categoryName, idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetTopBidAuctionsByCategoryAsync(string categoryName, int idx, int size)
    {
        return base.Channel.GetTopBidAuctionsByCategoryAsync(categoryName, idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetOpenAuctionsByUser(string userEmail, int idx, int size)
    {
        return base.Channel.GetOpenAuctionsByUser(userEmail, idx, size);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetOpenAuctionsByUserAsync(string userEmail, int idx, int size)
    {
        return base.Channel.GetOpenAuctionsByUserAsync(userEmail, idx, size);
    }
    
    public SGU_C2CStore.Services.Models.Auction[] GetMyWonAuctionsHistory(string userEmail)
    {
        return base.Channel.GetMyWonAuctionsHistory(userEmail);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Auction[]> GetMyWonAuctionsHistoryAsync(string userEmail)
    {
        return base.Channel.GetMyWonAuctionsHistoryAsync(userEmail);
    }
    
    public SGU_C2CStore.Services.Models.Bid[] GetMyBidHistory(string userEmail)
    {
        return base.Channel.GetMyBidHistory(userEmail);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetMyBidHistoryAsync(string userEmail)
    {
        return base.Channel.GetMyBidHistoryAsync(userEmail);
    }
    
    public SGU_C2CStore.Services.Models.Bid[] GetMyBidHistoryByItem(int auctionId)
    {
        return base.Channel.GetMyBidHistoryByItem(auctionId);
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Bid[]> GetMyBidHistoryByItemAsync(int auctionId)
    {
        return base.Channel.GetMyBidHistoryByItemAsync(auctionId);
    }
    
    public SGU_C2CStore.Services.Models.Category[] GetAllCategories()
    {
        return base.Channel.GetAllCategories();
    }
    
    public System.Threading.Tasks.Task<SGU_C2CStore.Services.Models.Category[]> GetAllCategoriesAsync()
    {
        return base.Channel.GetAllCategoriesAsync();
    }
    
    public void Comment(string userEmail, int autionId, string Content)
    {
        base.Channel.Comment(userEmail, autionId, Content);
    }
    
    public System.Threading.Tasks.Task CommentAsync(string userEmail, int autionId, string Content)
    {
        return base.Channel.CommentAsync(userEmail, autionId, Content);
    }
    
    public void UpdateAutions()
    {
        base.Channel.UpdateAutions();
    }
    
    public System.Threading.Tasks.Task UpdateAutionsAsync()
    {
        return base.Channel.UpdateAutionsAsync();
    }
    
    public void AddServiceUser(SGU_C2CStore.Services.Models.User user)
    {
        base.Channel.AddServiceUser(user);
    }
    
    public System.Threading.Tasks.Task AddServiceUserAsync(SGU_C2CStore.Services.Models.User user)
    {
        return base.Channel.AddServiceUserAsync(user);
    }
}
